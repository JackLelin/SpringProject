/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package clientGui;

import client.ClientMain;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;

/**
 *
 * @author jackle
 */
public class LoginFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public LoginFrame() 
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        userName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();
        newUserButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        serverIp = new javax.swing.JTextField();
        connectButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Login");

        userName.setText("userName");
        userName.addActionListener(new java.awt.event.ActionListener() 
        {
            public void actionPerformed(java.awt.event.ActionEvent evt) 
            {
                userNameActionPerformed(evt);
            }
        });

        jLabel2.setText("UserName");

        jLabel3.setText("Password");

        password.setText("");

        loginButton.setText("Login");
        loginButton.setEnabled(false);
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try 
                {
					loginButtonActionPerformed(evt);
				} catch (IOException e) 
				{
					e.printStackTrace();
				}
            }
        });

        newUserButton.setText("new User");
        newUserButton.setEnabled(false);
        newUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newUserButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Server ip");

        jLabel5.setText("Connect Server");

        serverIp.setText("ServerIp");
        serverIp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serverIpActionPerformed(evt);
            }
        });

        connectButton.setText("Connect");
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(serverIp)
                            .addComponent(password, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(userName)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(loginButton)
                        .addGap(18, 18, 18)
                        .addComponent(newUserButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(73, 73, 73))
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(connectButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginButton)
                    .addComponent(newUserButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(serverIp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(connectButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        
        try 
        {
			getClientInfo();
		} 
        catch 
		(ClassNotFoundException | IOException e) 
        {
			e.printStackTrace();
		}
        pack();
    }

    private void userNameActionPerformed(java.awt.event.ActionEvent evt) 
    {
        // TODO add your handling code here:
    }

    private void newUserButtonActionPerformed(java.awt.event.ActionEvent evt) 
    {
        // TODO new User Button Action
        
    	nuf = new NewUserFrame();
        nuf.setLocationRelativeTo(null);
        nuf.setVisible(true);
    }

    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) 
    {
        // TODO connectButtonAction performed

    		try 
    		{
				cm = new ClientMain(serverIp.getText());
				
				while(!cm.checkSocket())
				{}
				loginButton.setEnabled(true);
				newUserButton.setEnabled(true);
				
				connectButton.setEnabled(false);
			} 
    		catch (IOException e) 
    		{
    			JOptionPane.showMessageDialog(null,"服务器无法链接");
				e.printStackTrace();
			}

    }

    private void serverIpActionPerformed(java.awt.event.ActionEvent evt) 
    {
        // TODO add your handling code here:
    }

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) throws IOException 
    {
        // TODO add your handling code here:
    	String name = userName.getText();
    	String pass = password.getText();
    	/*******************************************************************************************************************/
        cm.loginUser(name, pass);
        saveClientInfo();
    }

    /**
     * @param args the command line arguments
     */

    private void getClientInfo() throws IOException, ClassNotFoundException
    {
    	File file = new File("clientinfo.info");
    	if(file.exists())
    	{
    		FileInputStream fis = new FileInputStream(file);
    		BufferedInputStream bis = new BufferedInputStream(fis);
    		ObjectInputStream ois = new ObjectInputStream(bis);
    		ClientInfo ci = (ClientInfo)ois.readObject();
    		password.setText(ci.getUserPass());
    		serverIp.setText(ci.getServerIP());
    		userName.setText(ci.getUserName());
    	}
    	else
    	{
    		
    	}
    }
    private void saveClientInfo() throws IOException
    {
    	String un = userName.getText();
    	String pa = password.getText();
    	String ip = serverIp.getText();
    	File file = new File("clientinfo.info");
    	if(file.exists())
    	{
    		file.delete();
    		saveClientInfo();
    	}
    	else
    	{
    		FileOutputStream fos = new FileOutputStream(file);
    		BufferedOutputStream bos = new BufferedOutputStream(fos);
    		ObjectOutputStream oos = new ObjectOutputStream(fos);
    		oos.writeObject(new ClientInfo(un,pa,ip));
    		oos.flush();
    		bos.flush();
    		oos.close();
    		bos.close();
    		fos.close();
    	}
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton connectButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton loginButton;
    private javax.swing.JButton newUserButton;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextField serverIp;
    private javax.swing.JTextField userName;
    public NewUserFrame nuf;
    public ClientFrame clientframe;
	public ClientMain cm;
    // End of variables declaration//GEN-END:variables
}
